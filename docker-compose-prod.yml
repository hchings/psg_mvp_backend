version: '3'

services:
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_DATABASE: core_db
    volumes:
      - ./dump:/dump
      - ./psg_mvp_backend/mongo.conf:/etc/mongo.conf
      - /data/db:/data/db
    command:
      - "--auth"
      - "-f"
      - "/etc/mongo.conf"
    ports:
      - "27017:27017"
  web:
    build: ./psg_mvp_backend
    # gunicorn --bind 0.0.0.0:8000 --chdir ./backend backend.wsgi
    command: [sh, -c, "python3 ./backend/manage.py index_cases_algolia && \
                       python3 ./backend/manage.py index_clinics_algolia && \
                       gunicorn --certfile=/code/security/certificate.crt --keyfile=/code/security/private.key --bind 0.0.0.0:443 --chdir ./backend backend.wsgi"]
    environment:
      DJANGO_SETTINGS_MODULE: backend.settings
    volumes:
      - ./psg_mvp_backend:/code
    # links:
      # - elasticsearch
    depends_on:
      - mongo
      # - elasticsearch
      - cache
      - celery
    expose:
    # - "8000"
      - "443"
  nginx:
    image: nginx:1.17-alpine
    ports:
    # - 80:80
      - 443:80
    volumes:
      - ./psg_mvp_backend/nginx.conf:/etc/nginx/nginx.conf
      - ./psg_mvp_backend/static:/var/static  # <-- bind the static volume
      - ./psg_mvp_backend/media:/var/media  # <-- bind the media volume
      - ./psg_mvp_backend/nginx_logs:/var/log/nginx
      - ./psg_mvp_backend/security:/var/security
    # - ./psg_mvp_backend/.well-known/pki-validation:/var/.well-known/pki-validation
    depends_on:  # <-- wait for djangoapp to be "ready" before starting this service
      - web
  elasticsearch: # Elasticsearch Instance
    container_name: elasticsearch
    build: ./es
    volumes: # Persist ES data in seperate "esdata" volume
      - ./esdata:/usr/share/elasticsearch/data
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - http.port=9200
      - http.cors.enabled=true
      - http.cors.allow-origin=http://localhost:1358,http://127.0.0.1:1358
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - http.cors.allow-credentials=true
      - bootstrap.memory_lock=true
    expose:
      - "9300"
      - "9200"
  cache:
    image: memcached
    ports:
      - "11211:11211"
    entrypoint:
      - memcached
      - -m 64
  celery:
    build: ./psg_mvp_backend
    command: [sh, -c, "cd ./backend && \
                       celery -A backend worker -l info"]
    volumes:
      - ./psg_mvp_backend:/code
    environment:
      - CELERY_BROKER_URL =redis://redis:6379/0'
      - CELERY_ACCEPT_CONTENT = ['json']
      - CELERY_TASK_SERIALIZER = 'json'
    links:
      - redis
    depends_on:
      - redis
  redis:
    image: redis:latest
    container_name: rd01
#    ports:
#      - '6379:6379'
